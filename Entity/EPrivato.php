<?php


class EPrivato extends EUtente_loggato {

       private $nome;
       private $cognome;
       private $email_privato;

/*Costruttore della classe EPrivato, che Ã¨ una classe ereidtaria della
  classe padre EUtente_loggato*/

            public function __construct($name, $mail, $pw, $tel,$nom,$cog)
               {
                      parent::__construct($name, $mail, $pw, $tel);
                      $this->setNome($nom);
                      $this->setCognome($cog);
               }

       //METODI GET

    /**Metodo che ci permette di prendere il nome del privato
     * @return mixed
     */
    public function getNome()
    {
        return $this->nome;
    }

    /**Metodo che ci permette di prendere il cognome del privato
     * @return mixed
     */
    public function getCognome()
    {
        return $this->cognome;
    }

    //METODI SET

    /**Metodo che ci permette di cambiare il nome del privato
     * @param mixed $nome
     */
    public function setNome($nome)
    {
        if (EInputControl::getInstance()->testName($nome)) {
            str_replace("\'", "'", $nome);
            $this->nome = $nome;
        } else {
            throw new Exception("Nome non valido");
        }
    }

    /**Metodo che ci permette di cambiare il cognome del privato
     * @param mixed $cognome
     */
    public function setCognome($cognome)
    {
        if (EInputControl::getInstance()->testName($cognome)) {
            str_replace("\'", "'", $cognome);
            $this->cognome = $cognome;
        } else {
            throw new Exception("Nome non valido");
        }

    }
    /*Metodo che ci permette di stampare a video tutti gli
      attributi della classe EPrivato*/
    public function toString()
    {
        return parent::toString(). // TODO: Change the autogenerated stub
        "Nome: ".$this->nome."\n".
        "Cognome: ".$this->cognome."\n";
    }

}